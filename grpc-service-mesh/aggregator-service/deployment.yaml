apiVersion: v1
kind: ConfigMap
metadata:
  name: front-envoy
  namespace: default
data:
  envoy.yaml: >
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 80 
        use_original_dst: true
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              generate_request_id: true
              access_log:
              - name: envoy.file_access_log
                config:
                  path: "/var/log/access.log"
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: service-a
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: service-a
              http_filters:
              - name: envoy.router
                config: {}
      clusters:
      - name: service-a
        connect_timeout: 166s
        type: strict_dns
        lb_policy: round_robin
        http2_protocol_options: { }
        hosts: [{ socket_address: { address: service-a-grpc-mesh-svc, port_value: 8000 }}]
    admin:
      # Could be tailed with a sidecar container.
      access_log_path: "/var/log/admin-access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: service-front-grpc-mesh
spec:
  selector:
    matchLabels:
      app: service-front-grpc-mesh
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: service-front-grpc-mesh
    spec:
      containers:
      - name: node
        image: shahin/up-running-kub-grpc-front:d2f18a03d66fd5fa92f265b6503aea313dae1fde
        ports:
        - containerPort: 8000
        env:
          - name: "serviceAURL"
            value: "localhost:80"
      - name: front-envoy
        image: envoyproxy/envoy-dev:7f251daa2e488587bc7335f91faceed420f162c4
        command: ["envoy"]
        args: ["-c", "/etc/envoy.yaml", "--service-cluster", "$(POD_NAME)"]
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: envoy-yaml
        configMap:
          name: front-envoy
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
    name: service-front-grpc-mesh-svc
    labels:
        app: service-front-grpc-mesh
spec:
    type: NodePort
    ports:
    - port: 80
      targetPort: 8000
      nodePort: 30005
    selector:
     app: service-front-grpc-mesh
